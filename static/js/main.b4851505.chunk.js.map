{"version":3,"sources":["pages/auth/login.module.css","pages/auth/login.js","pages/auth/sign_up.js","App.js","serviceWorker.js","index.js","pages/auth/signup.module.css"],"names":["module","exports","form","fadeIn","header","inputcontainer","input","fgt","signup","emailSent","Login","state","respass","verificationSuccess","loading","_this2","this","react_default","a","createElement","className","classes","placeholder","type","onClick","e","preventDefault","setState","props","history","push","Component","withRouter","Signup","authStart","onSubmit","policy","style","color","fontWeight","fontFamily","notFound","textAlign","App","react_router","path","component","render","Boolean","window","location","hostname","match","app","react_router_dom","basename","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4851505.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__GqDcY\",\"fadeIn\":\"login_fadeIn__1MsIw\",\"header\":\"login_header__1UsJf\",\"inputcontainer\":\"login_inputcontainer__1J0PJ\",\"input\":\"login_input__2CrPv\",\"fgt\":\"login_fgt__1qvXq\",\"signup\":\"login_signup__3FEXs\",\"emailSent\":\"login_emailSent__2Af5s\"};","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport classes from './login.module.css';\n\nclass Login extends Component {\n state = {\n  respass: false,\n  emailSent: false,\n  verificationSuccess: false,\n  loading: false\n };\n render() {\n  return (\n   <form className={classes.form}>\n    {!this.state.respass ? (\n     <div>\n      <h1 className={classes.header}>LOGIN</h1>\n      <div className={classes.inputcontainer}>\n       <div className={classes.input}>\n        <span>Email</span>\n        <input placeholder=\"Aa@domain.com\" />\n       </div>\n       <div className={classes.input}>\n        <span>Password</span>\n        <input placeholder=\"Password\" type=\"password\" />\n       </div>\n       <button\n        type=\"submit\"\n        onClick={e => {\n         e.preventDefault();\n         this.setState({ loading: true });\n        }}\n       >\n        LOGIN\n       </button>\n       <span className={classes.signup}>\n        New ?{' '}\n        <span\n         onClick={() => this.props.history.push('/signup')}\n        >\n         Sign Up\n        </span>\n       </span>\n       <span\n        className={classes.fgt}\n        onClick={() => this.setState({ respass: true })}\n       >\n        Forgot password ?\n       </span>\n      </div>\n     </div>\n    ) : !this.state.emailSent ? (\n     <div>\n      <h1 className={classes.header}>\n       Forgot your password?\n      </h1>\n      <p className={classes.emailSent}>\n       Enter your email address below and we'll email you\n       instructions on how to change your password.\n      </p>\n      <div className={classes.inputcontainer}>\n       <div className={classes.input}>\n        <span>Email</span>\n        <input placeholder=\"Enter your email address\" />\n       </div>\n       <button\n        type=\"submit\"\n        onClick={e => {\n         e.preventDefault();\n         this.setState({ emailSent: true });\n        }}\n       >\n        CONTINUE\n       </button>\n      </div>\n     </div>\n    ) : !this.state.verificationSuccess ? (\n     <div>\n      <h1 className={classes.header}>Verify Email</h1>\n      <p className={classes.emailSent}>\n       A four digit verification pin have been sent to your\n       email, enter the pin below to continue.\n      </p>\n      <div className={classes.inputcontainer}>\n       <div className={classes.input}>\n        <input placeholder=\"Verification Pin\" />\n       </div>\n       <button\n        type=\"submit\"\n        onClick={e => {\n         e.preventDefault();\n         this.setState({ verificationSuccess: true });\n        }}\n       >\n        CONTINUE\n       </button>\n      </div>\n     </div>\n    ) : (\n     <div>\n      <h1 className={classes.header}>Reset Password</h1>\n\n      <div className={classes.inputcontainer}>\n       <div className={classes.input}>\n        <span>Password</span>\n        <input placeholder=\"Password\" type=\"password\" />\n       </div>\n       <div className={classes.input}>\n        <span>Confirm password</span>\n        <input placeholder=\"Password\" type=\"password\" />\n       </div>\n       <button\n        type=\"submit\"\n        onClick={e => {\n         e.preventDefault();\n         this.setState({\n          respass: false,\n          emailSent: false,\n          verificationSuccess: false\n         });\n        }}\n       >\n        CHANGE PASSWORD\n       </button>\n      </div>\n     </div>\n    )}\n   </form>\n  );\n }\n}\n\nexport default withRouter(Login);\n","import React, { Component } from 'react';\nimport classes from './signup.module.css';\n\nexport default class Signup extends Component {\n  state = {\n    authStart: false\n  };\n  render() {\n    return (\n      <form className={classes.form}>\n        <h1 className={classes.header}>{this.state.authStart ? 'CREATE PASSWORD' : 'SIGN UP'}</h1>\n        {this.state.authStart ? (\n          <div className={classes.inputcontainer}>\n            <div className={classes.input}>\n              <span>Password</span>\n              <input placeholder=\"password\" type=\"password\" />\n            </div>\n            <div className={classes.input}>\n              <span>Confirm Password</span>\n              <input placeholder=\"confirm password\" type=\"password\" />\n            </div>\n            <button\n              type=\"submit\"\n              onSubmit={e => {\n                e.preventDefault();\n              }}\n            >\n              SIGN UP\n            </button>\n          </div>\n        ) : (\n          <div className={classes.inputcontainer}>\n            <div className={classes.input}>\n              <span>First Name</span>\n              <input placeholder=\"John\" />\n            </div>\n            <div className={classes.input}>\n              <span>Last Name</span>\n              <input placeholder=\"Doe\" />\n            </div>\n            <div className={classes.input}>\n              <span>Email</span>\n              <input placeholder=\"Aa@domain.com\" />\n            </div>\n            <span className={classes.policy}>\n              By clicking continue, you're onboard with our\n              <span\n                style={{\n                  color: '#0073b1',\n                  fontWeight: 'bold',\n                  fontFamily: 'Ubuntu'\n                }}\n              >\n                {' '}\n                privacy policy.\n              </span>\n            </span>\n            <button\n              type=\"submit\"\n              onClick={e => {\n                e.preventDefault();\n                this.setState({ authStart: true });\n              }}\n            >\n              CONTINUE\n            </button>\n          </div>\n        )}\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/auth/login';\nimport Signup from './pages/auth/sign_up';\n\nfunction App() {\n return (\n  <div>\n   <Switch>\n    <Route path=\"/\" component={Login} />\n    <Route path=\"/signup\" component={Signup} />\n    <Route render={notFound} />\n   </Switch>\n  </div>\n );\n}\n\nfunction notFound() {\n return (\n  <p style={{ textAlign: 'center', fontFamily: 'Ubuntu' }}>\n   Error 404\n  </p>\n  //\n );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nconst app = (\n <BrowserRouter basename=\"/auth_page\">\n  <App />\n </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"signup_form__3zEvm\",\"fadeIn\":\"signup_fadeIn__t9Mh1\",\"header\":\"signup_header__2hVgx\",\"inputcontainer\":\"signup_inputcontainer__15m8b\",\"input\":\"signup_input__2WcHx\",\"policy\":\"signup_policy__CzT47\",\"fgt\":\"signup_fgt__3Gfbz\"};"],"sourceRoot":""}